// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  // Name of the sim cfg - typically same as the name of the DUT.
  name: otp_ctrl_top

  // Top level dut name (sv module).
  dut: otp_ctrl_top

  // Top level testbench name (sv module).
  tb: tb

  // Simulator used to sign off this block
  tool: vcs

  // Fusesoc core file used for building the file list.
  fusesoc_core: lowrisc:dv:otp_ctrl_sim:0.1

  // Testplan hjson file.
  testplan: "{CALIPTRA_ROOT}/src/otp_ctrl/data/otp_ctrl_testplan.hjson"

  // RAL spec - used to generate the RAL model.
  ral_spec: "{CALITPRA_ROOT}/src/otp_ctrl/data/otp_ctrl.hjson"

  // Import additional common sim cfg files.
  import_cfgs: [// Project wide common sim cfg file
                "{CALIPTRA_ROOT}/tools/dv/dvsim/common_sim_cfg.hjson",
                // Config files to get the correct flags for crypto_dpi_prince
                //"{CALIPTRA_ROOT}/hw/ip/prim/dv/prim_prince/crypto_dpi_prince/crypto_dpi_prince_sim_opts.hjson",
                // Common CIP test lists
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/csr_tests.hjson",
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/mem_tests.hjson",
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/intr_test.hjson",
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/alert_test.hjson",
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/tl_access_tests.hjson",
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/sec_cm_tests.hjson",
                "{CALIPTRA_ROOT}/tools/dv/dvsim/tests/stress_tests.hjson"]

  //en_build_modes: ["{tool}_crypto_dpi_prince_build_opts"]

  build_modes: [
    // Sim mode that enables build randomization. See the `build_seed` mode
    // defined in `hw/dv/tools/dvsim/common_modes.hjson` for more details.
    {
      name: build_seed
      pre_build_cmds: ["cd {CALIPTRA_ROOT} && ./tools/util/design/gen-otp-mmap.py --seed {seed}"]
      is_sim_mode: 1
    }
  ]

  // Add additional tops for simulation.
  sim_tops: ["otp_ctrl_bind", "otp_ctrl_cov_bind",
             "sec_cm_prim_sparse_fsm_flop_bind",
             "sec_cm_prim_count_bind",
             "sec_cm_prim_double_lfsr_bind",
             "sec_cm_prim_onehot_check_bind"]

  // Default iterations for all tests - each test entry can override this.
  reseed: 50

  // Add OTP_CTRL specific exclusion files.
  vcs_cov_excl_files: ["{CALIPTRA_ROOT}/src/otp_ctrl/dv/cov/otp_ctrl_cov_unr_excl.el",
                       "{CALIPTRA_ROOT}/src/otp_ctrl/dv/cov/otp_ctrl_cov_fsm_unr_excl.el"]

  overrides: [
    {
      name: default_vcs_cov_cfg_file
      value: "-cm_hier {CALIPTRA_ROOT}/tools/dv/vcs/cover.cfg+{CALIPTRA_ROOT}/tools/dv/vcs/common_cov_excl.cfg+{CALIPTRA_ROOT}/src/otp_ctrl/dv/cov/otp_ctrl_cover.cfg"
    }
  ]

  // Default UVM test and seq class name.
  uvm_test: otp_ctrl_base_test
  uvm_test_seq: otp_ctrl_base_vseq

  run_opts: ["+cdc_instrumentation_enabled=1"]

  // List of test specifications.
  tests: [
    {
      name: otp_ctrl_wake_up
      uvm_test_seq: otp_ctrl_wake_up_vseq
      run_opts: ["+en_scb=0"]
      reseed: 1
    }

    {
      name: otp_ctrl_smoke
      uvm_test_seq: otp_ctrl_smoke_vseq
    }

    {
      name: otp_ctrl_partition_walk
      uvm_test_seq: otp_ctrl_partition_walk_vseq
      reseed: 1
    }

    {
      name: otp_ctrl_low_freq_read
      uvm_test_seq: otp_ctrl_low_freq_read_vseq
      reseed: 1
    }

    {
      name: otp_ctrl_init_fail
      uvm_test_seq: otp_ctrl_init_fail_vseq
      reseed: 300
    }
    {
      name: otp_ctrl_background_chks
      uvm_test_seq: otp_ctrl_background_chks_vseq
      reseed: 10
    }

    {
      name: otp_ctrl_parallel_lc_req
      uvm_test_seq: otp_ctrl_parallel_lc_req_vseq
      run_opts: ["+zero_delays=1"]
    }

    {
      name: otp_ctrl_parallel_lc_esc
      uvm_test_seq: otp_ctrl_parallel_lc_esc_vseq
      reseed: 200
    }

    {
      name: otp_ctrl_dai_lock
      uvm_test_seq: otp_ctrl_dai_lock_vseq
    }

    {
      name: otp_ctrl_dai_errs
      uvm_test_seq: otp_ctrl_dai_errs_vseq
    }

    {
      name: otp_ctrl_check_fail
      uvm_test_seq: otp_ctrl_check_fail_vseq
    }

    {
      name: otp_ctrl_macro_errs
      uvm_test_seq: otp_ctrl_macro_errs_vseq
    }

    {
      name: otp_ctrl_parallel_key_req
      uvm_test_seq: otp_ctrl_parallel_key_req_vseq
    }

    {
      name: otp_ctrl_regwen
      uvm_test_seq: otp_ctrl_regwen_vseq
      // This test is to check reg programming is gated when direct_access_regwen=0
      // Thus this test is timing sensitive
      run_opts: ["+zero_delays=1"]
    }

    {
      name: otp_ctrl_test_access
      uvm_test_seq: otp_ctrl_test_access_vseq
    }

    {
      name: "{name}_stress_all_with_rand_reset"
      reseed: 100
    }
  ]

  // List of regressions.
  regressions: [
    {
      name: smoke
      tests: ["otp_ctrl_smoke"]
    }
  ]
}
