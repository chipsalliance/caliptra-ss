// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#ifndef FUSE_CTRL_MMAP_HEADERS
#define FUSE_CTRL_MMAP_HEADERS

#include <stdbool.h>
#include <stdint.h>

typedef enum {
    // SW_TEST_UNLOCK_PARTITION
    CPTRA_SS_MANUF_DEBUG_UNLOCK_TOKEN = 0x0000,
    // SECRET_MANUF_PARTITION
    CPTRA_CORE_UDS_SEED = 0x0048,
    // SECRET_PROD_PARTITION_0
    CPTRA_CORE_FIELD_ENTROPY_0 = 0x0098,
    // SECRET_PROD_PARTITION_1
    CPTRA_CORE_FIELD_ENTROPY_1 = 0x00B0,
    // SECRET_PROD_PARTITION_2
    CPTRA_CORE_FIELD_ENTROPY_2 = 0x00C8,
    // SECRET_PROD_PARTITION_3
    CPTRA_CORE_FIELD_ENTROPY_3 = 0x00E0,
    // SW_MANUF_PARTITION
    CPTRA_CORE_ANTI_ROLLBACK_DISABLE = 0x00F8,
    CPTRA_CORE_IDEVID_CERT_IDEVID_ATTR = 0x00FC,
    SOC_SPECIFIC_IDEVID_CERTIFICATE = 0x015C,
    CPTRA_CORE_IDEVID_MANUF_HSM_IDENTIFIER = 0x0160,
    CPTRA_CORE_SOC_STEPPING_ID = 0x0170,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_0 = 0x0174,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_1 = 0x01A4,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_2 = 0x01D4,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_3 = 0x0204,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_4 = 0x0234,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_5 = 0x0264,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_6 = 0x0294,
    CPTRA_SS_PROD_DEBUG_UNLOCK_PKS_7 = 0x02C4,
    // SECRET_LC_TRANSITION_PARTITION
    CPTRA_SS_TEST_UNLOCK_TOKEN_1 = 0x0300,
    CPTRA_SS_TEST_UNLOCK_TOKEN_2 = 0x0310,
    CPTRA_SS_TEST_UNLOCK_TOKEN_3 = 0x0320,
    CPTRA_SS_TEST_UNLOCK_TOKEN_4 = 0x0330,
    CPTRA_SS_TEST_UNLOCK_TOKEN_5 = 0x0340,
    CPTRA_SS_TEST_UNLOCK_TOKEN_6 = 0x0350,
    CPTRA_SS_TEST_UNLOCK_TOKEN_7 = 0x0360,
    CPTRA_SS_TEST_EXIT_TO_MANUF_TOKEN = 0x0370,
    CPTRA_SS_MANUF_TO_PROD_TOKEN = 0x0380,
    CPTRA_SS_PROD_TO_PROD_END_TOKEN = 0x0390,
    CPTRA_SS_RMA_TOKEN = 0x03A0,
    // SVN_PARTITION
    CPTRA_CORE_FMC_KEY_MANIFEST_SVN = 0x03B8,
    CPTRA_CORE_RUNTIME_SVN = 0x03BC,
    CPTRA_CORE_SOC_MANIFEST_SVN = 0x03CC,
    CPTRA_CORE_SOC_MANIFEST_MAX_SVN = 0x03DC,
    // VENDOR_TEST_PARTITION
    VENDOR_TEST = 0x03E0,
    // VENDOR_HASHES_MANUF_PARTITION
    CPTRA_CORE_VENDOR_PK_HASH_0 = 0x0420,
    CPTRA_CORE_PQC_KEY_TYPE_0 = 0x0450,
    // VENDOR_HASHES_PROD_PARTITION
    CPTRA_SS_OWNER_PK_HASH = 0x0460,
    CPTRA_SS_OWNER_PQC_KEY_TYPE = 0x0490,
    CPTRA_SS_OWNER_PK_HASH_VALID = 0x0494,
    CPTRA_CORE_VENDOR_PK_HASH_1 = 0x0498,
    CPTRA_CORE_PQC_KEY_TYPE_1 = 0x04C8,
    CPTRA_CORE_VENDOR_PK_HASH_2 = 0x04CC,
    CPTRA_CORE_PQC_KEY_TYPE_2 = 0x04FC,
    CPTRA_CORE_VENDOR_PK_HASH_3 = 0x0500,
    CPTRA_CORE_PQC_KEY_TYPE_3 = 0x0530,
    CPTRA_CORE_VENDOR_PK_HASH_4 = 0x0534,
    CPTRA_CORE_PQC_KEY_TYPE_4 = 0x0564,
    CPTRA_CORE_VENDOR_PK_HASH_5 = 0x0568,
    CPTRA_CORE_PQC_KEY_TYPE_5 = 0x0598,
    CPTRA_CORE_VENDOR_PK_HASH_6 = 0x059C,
    CPTRA_CORE_PQC_KEY_TYPE_6 = 0x05CC,
    CPTRA_CORE_VENDOR_PK_HASH_7 = 0x05D0,
    CPTRA_CORE_PQC_KEY_TYPE_7 = 0x0600,
    CPTRA_CORE_VENDOR_PK_HASH_8 = 0x0604,
    CPTRA_CORE_PQC_KEY_TYPE_8 = 0x0634,
    CPTRA_CORE_VENDOR_PK_HASH_9 = 0x0638,
    CPTRA_CORE_PQC_KEY_TYPE_9 = 0x0668,
    CPTRA_CORE_VENDOR_PK_HASH_10 = 0x066C,
    CPTRA_CORE_PQC_KEY_TYPE_10 = 0x069C,
    CPTRA_CORE_VENDOR_PK_HASH_11 = 0x06A0,
    CPTRA_CORE_PQC_KEY_TYPE_11 = 0x06D0,
    CPTRA_CORE_VENDOR_PK_HASH_12 = 0x06D4,
    CPTRA_CORE_PQC_KEY_TYPE_12 = 0x0704,
    CPTRA_CORE_VENDOR_PK_HASH_13 = 0x0708,
    CPTRA_CORE_PQC_KEY_TYPE_13 = 0x0738,
    CPTRA_CORE_VENDOR_PK_HASH_14 = 0x073C,
    CPTRA_CORE_PQC_KEY_TYPE_14 = 0x076C,
    CPTRA_CORE_VENDOR_PK_HASH_15 = 0x0770,
    CPTRA_CORE_PQC_KEY_TYPE_15 = 0x07A0,
    CPTRA_CORE_VENDOR_PK_HASH_VALID = 0x07A4,
    // VENDOR_REVOCATIONS_PROD_PARTITION
    CPTRA_SS_OWNER_ECC_REVOCATION = 0x07C0,
    CPTRA_SS_OWNER_LMS_REVOCATION = 0x07C4,
    CPTRA_SS_OWNER_MLDSA_REVOCATION = 0x07C8,
    CPTRA_CORE_ECC_REVOCATION_0 = 0x07CC,
    CPTRA_CORE_LMS_REVOCATION_0 = 0x07D0,
    CPTRA_CORE_MLDSA_REVOCATION_0 = 0x07D4,
    CPTRA_CORE_ECC_REVOCATION_1 = 0x07D8,
    CPTRA_CORE_LMS_REVOCATION_1 = 0x07DC,
    CPTRA_CORE_MLDSA_REVOCATION_1 = 0x07E0,
    CPTRA_CORE_ECC_REVOCATION_2 = 0x07E4,
    CPTRA_CORE_LMS_REVOCATION_2 = 0x07E8,
    CPTRA_CORE_MLDSA_REVOCATION_2 = 0x07EC,
    CPTRA_CORE_ECC_REVOCATION_3 = 0x07F0,
    CPTRA_CORE_LMS_REVOCATION_3 = 0x07F4,
    CPTRA_CORE_MLDSA_REVOCATION_3 = 0x07F8,
    CPTRA_CORE_ECC_REVOCATION_4 = 0x07FC,
    CPTRA_CORE_LMS_REVOCATION_4 = 0x0800,
    CPTRA_CORE_MLDSA_REVOCATION_4 = 0x0804,
    CPTRA_CORE_ECC_REVOCATION_5 = 0x0808,
    CPTRA_CORE_LMS_REVOCATION_5 = 0x080C,
    CPTRA_CORE_MLDSA_REVOCATION_5 = 0x0810,
    CPTRA_CORE_ECC_REVOCATION_6 = 0x0814,
    CPTRA_CORE_LMS_REVOCATION_6 = 0x0818,
    CPTRA_CORE_MLDSA_REVOCATION_6 = 0x081C,
    CPTRA_CORE_ECC_REVOCATION_7 = 0x0820,
    CPTRA_CORE_LMS_REVOCATION_7 = 0x0824,
    CPTRA_CORE_MLDSA_REVOCATION_7 = 0x0828,
    CPTRA_CORE_ECC_REVOCATION_8 = 0x082C,
    CPTRA_CORE_LMS_REVOCATION_8 = 0x0830,
    CPTRA_CORE_MLDSA_REVOCATION_8 = 0x0834,
    CPTRA_CORE_ECC_REVOCATION_9 = 0x0838,
    CPTRA_CORE_LMS_REVOCATION_9 = 0x083C,
    CPTRA_CORE_MLDSA_REVOCATION_9 = 0x0840,
    CPTRA_CORE_ECC_REVOCATION_10 = 0x0844,
    CPTRA_CORE_LMS_REVOCATION_10 = 0x0848,
    CPTRA_CORE_MLDSA_REVOCATION_10 = 0x084C,
    CPTRA_CORE_ECC_REVOCATION_11 = 0x0850,
    CPTRA_CORE_LMS_REVOCATION_11 = 0x0854,
    CPTRA_CORE_MLDSA_REVOCATION_11 = 0x0858,
    CPTRA_CORE_ECC_REVOCATION_12 = 0x085C,
    CPTRA_CORE_LMS_REVOCATION_12 = 0x0860,
    CPTRA_CORE_MLDSA_REVOCATION_12 = 0x0864,
    CPTRA_CORE_ECC_REVOCATION_13 = 0x0868,
    CPTRA_CORE_LMS_REVOCATION_13 = 0x086C,
    CPTRA_CORE_MLDSA_REVOCATION_13 = 0x0870,
    CPTRA_CORE_ECC_REVOCATION_14 = 0x0874,
    CPTRA_CORE_LMS_REVOCATION_14 = 0x0878,
    CPTRA_CORE_MLDSA_REVOCATION_14 = 0x087C,
    CPTRA_CORE_ECC_REVOCATION_15 = 0x0880,
    CPTRA_CORE_LMS_REVOCATION_15 = 0x0884,
    CPTRA_CORE_MLDSA_REVOCATION_15 = 0x0888,
    // VENDOR_SECRET_PROD_PARTITION
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_0 = 0x0898,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_1 = 0x08B8,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_2 = 0x08D8,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_3 = 0x08F8,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_4 = 0x0918,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_5 = 0x0938,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_6 = 0x0958,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_7 = 0x0978,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_8 = 0x0998,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_9 = 0x09B8,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_10 = 0x09D8,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_11 = 0x09F8,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_12 = 0x0A18,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_13 = 0x0A38,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_14 = 0x0A58,
    CPTRA_SS_VENDOR_SPECIFIC_SECRET_FUSE_15 = 0x0A78,
    // VENDOR_NON_SECRET_PROD_PARTITION
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_0 = 0x0AA8,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_1 = 0x0AC8,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_2 = 0x0AE8,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_3 = 0x0B08,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_4 = 0x0B28,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_5 = 0x0B48,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_6 = 0x0B68,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_7 = 0x0B88,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_8 = 0x0BA8,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_9 = 0x0BC8,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_10 = 0x0BE8,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_11 = 0x0C08,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_12 = 0x0C28,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_13 = 0x0C48,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_14 = 0x0C68,
    CPTRA_SS_VENDOR_SPECIFIC_NON_SECRET_FUSE_15 = 0x0C88,
    // CPTRA_SS_LOCK_HEK_PROD_0
    CPTRA_SS_LOCK_HEK_PROD_0_RATCHET_SEED = 0x0CB0,
    // CPTRA_SS_LOCK_HEK_PROD_1
    CPTRA_SS_LOCK_HEK_PROD_1_RATCHET_SEED = 0x0CE0,
    // CPTRA_SS_LOCK_HEK_PROD_2
    CPTRA_SS_LOCK_HEK_PROD_2_RATCHET_SEED = 0x0D10,
    // CPTRA_SS_LOCK_HEK_PROD_3
    CPTRA_SS_LOCK_HEK_PROD_3_RATCHET_SEED = 0x0D40,
    // CPTRA_SS_LOCK_HEK_PROD_4
    CPTRA_SS_LOCK_HEK_PROD_4_RATCHET_SEED = 0x0D70,
    // CPTRA_SS_LOCK_HEK_PROD_5
    CPTRA_SS_LOCK_HEK_PROD_5_RATCHET_SEED = 0x0DA0,
    // CPTRA_SS_LOCK_HEK_PROD_6
    CPTRA_SS_LOCK_HEK_PROD_6_RATCHET_SEED = 0x0DD0,
    // CPTRA_SS_LOCK_HEK_PROD_7
    CPTRA_SS_LOCK_HEK_PROD_7_RATCHET_SEED = 0x0E00,
    // LIFE_CYCLE
    LC_TRANSITION_CNT = 0x0E30,
    LC_STATE = 0x0E60
} fuse_k;

typedef enum {
    SW_TEST_UNLOCK_PARTITION,
    SECRET_MANUF_PARTITION,
    SECRET_PROD_PARTITION_0,
    SECRET_PROD_PARTITION_1,
    SECRET_PROD_PARTITION_2,
    SECRET_PROD_PARTITION_3,
    SW_MANUF_PARTITION,
    SECRET_LC_TRANSITION_PARTITION,
    SVN_PARTITION,
    VENDOR_TEST_PARTITION,
    VENDOR_HASHES_MANUF_PARTITION,
    VENDOR_HASHES_PROD_PARTITION,
    VENDOR_REVOCATIONS_PROD_PARTITION,
    VENDOR_SECRET_PROD_PARTITION,
    VENDOR_NON_SECRET_PROD_PARTITION,
    CPTRA_SS_LOCK_HEK_PROD_0,
    CPTRA_SS_LOCK_HEK_PROD_1,
    CPTRA_SS_LOCK_HEK_PROD_2,
    CPTRA_SS_LOCK_HEK_PROD_3,
    CPTRA_SS_LOCK_HEK_PROD_4,
    CPTRA_SS_LOCK_HEK_PROD_5,
    CPTRA_SS_LOCK_HEK_PROD_6,
    CPTRA_SS_LOCK_HEK_PROD_7,
    LIFE_CYCLE
} partition_k;

typedef struct {
    uint32_t        index;
    uint32_t        address;
    uint32_t        digest_address;
    uint32_t        zer_address;
    uint32_t        variant;
    uint32_t        granularity;
    bool            is_secret;
    bool            hw_digest;
    bool            sw_digest;
    bool            has_ecc;
    uint32_t        lc_phase;
    bool            is_lifecycle;
    uint32_t        num_fuses;
    const uint32_t *fuses;
} partition_t;

#define NUM_PARTITIONS 24

// A map of the NUM_PARTITIONS fuse partitions.
extern const partition_t partitions[];

// Arrays with indices of fuses for each partition.
extern const uint32_t sw_test_unlock_partition_fuses[];
extern const uint32_t secret_manuf_partition_fuses[];
extern const uint32_t secret_prod_partition_0_fuses[];
extern const uint32_t secret_prod_partition_1_fuses[];
extern const uint32_t secret_prod_partition_2_fuses[];
extern const uint32_t secret_prod_partition_3_fuses[];
extern const uint32_t sw_manuf_partition_fuses[];
extern const uint32_t secret_lc_transition_partition_fuses[];
extern const uint32_t svn_partition_fuses[];
extern const uint32_t vendor_test_partition_fuses[];
extern const uint32_t vendor_hashes_manuf_partition_fuses[];
extern const uint32_t vendor_hashes_prod_partition_fuses[];
extern const uint32_t vendor_revocations_prod_partition_fuses[];
extern const uint32_t vendor_secret_prod_partition_fuses[];
extern const uint32_t vendor_non_secret_prod_partition_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_0_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_1_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_2_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_3_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_4_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_5_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_6_fuses[];
extern const uint32_t cptra_ss_lock_hek_prod_7_fuses[];
extern const uint32_t life_cycle_fuses[];

#endif // FUSE_CTRL_MMAP_HEADERS
