// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package mci_reg_pkg;

    localparam MCI_REG_DATA_WIDTH = 32;
    localparam MCI_REG_MIN_ADDR_WIDTH = 13;

    typedef struct packed{
        logic [3:0] next;
    } mci_reg__CAPABILITIES__NUM_MBOX__in_t;

    typedef struct packed{
        mci_reg__CAPABILITIES__NUM_MBOX__in_t NUM_MBOX;
    } mci_reg__CAPABILITIES__in_t;

    typedef struct packed{
        logic [15:0] next;
    } mci_reg__HW_REV_ID__SOC_STEPPING_ID__in_t;

    typedef struct packed{
        mci_reg__HW_REV_ID__SOC_STEPPING_ID__in_t SOC_STEPPING_ID;
    } mci_reg__HW_REV_ID__in_t;

    typedef struct packed{
        logic next;
    } mci_reg__HW_CONFIG__RSVD_en__in_t;

    typedef struct packed{
        mci_reg__HW_CONFIG__RSVD_en__in_t RSVD_en;
    } mci_reg__HW_CONFIG__in_t;

    typedef struct packed{
        logic [4:0] next;
    } mci_reg__FLOW_STATUS__boot_fsm_ps__in_t;

    typedef struct packed{
        mci_reg__FLOW_STATUS__boot_fsm_ps__in_t boot_fsm_ps;
    } mci_reg__FLOW_STATUS__in_t;

    typedef struct packed{
        logic next;
        logic we;
    } mci_reg__RESET_REASON__FW_UPD_RESET__in_t;

    typedef struct packed{
        logic next;
    } mci_reg__RESET_REASON__WARM_RESET__in_t;

    typedef struct packed{
        mci_reg__RESET_REASON__FW_UPD_RESET__in_t FW_UPD_RESET;
        mci_reg__RESET_REASON__WARM_RESET__in_t WARM_RESET;
    } mci_reg__RESET_REASON__in_t;

    typedef struct packed{
        logic next;
        logic we;
    } mci_reg__rw_rw_sticky_hw__in_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_hw__in_t mcu_sram_ecc_unc;
        mci_reg__rw_rw_sticky_hw__in_t nmi_pin;
    } mci_reg__HW_ERROR_FATAL__in_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_hw__in_t RSVD;
    } mci_reg__HW_ERROR_NON_FATAL__in_t;

    typedef struct packed{
        logic [31:0] next;
        logic we;
    } mci_reg__rw_rw_sticky_w32__in_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_w32__in_t error_code;
    } mci_reg__FW_ERROR_FATAL__in_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_w32__in_t error_code;
    } mci_reg__FW_ERROR_NON_FATAL__in_t;

    typedef struct packed{
        logic next;
    } mci_reg__WDT_STATUS__t1_timeout__in_t;

    typedef struct packed{
        logic next;
    } mci_reg__WDT_STATUS__t2_timeout__in_t;

    typedef struct packed{
        mci_reg__WDT_STATUS__t1_timeout__in_t t1_timeout;
        mci_reg__WDT_STATUS__t2_timeout__in_t t2_timeout;
    } mci_reg__WDT_STATUS__in_t;

    typedef struct packed{
        logic incr;
    } mci_reg__MCU_RV_MTIME_L__count_l__in_t;

    typedef struct packed{
        mci_reg__MCU_RV_MTIME_L__count_l__in_t count_l;
    } mci_reg__MCU_RV_MTIME_L__in_t;

    typedef struct packed{
        logic incr;
    } mci_reg__MCU_RV_MTIME_H__count_h__in_t;

    typedef struct packed{
        mci_reg__MCU_RV_MTIME_H__count_h__in_t count_h;
    } mci_reg__MCU_RV_MTIME_H__in_t;

    typedef struct packed{
        logic hwclr;
    } mci_reg__RESET_REQUEST__req__in_t;

    typedef struct packed{
        mci_reg__RESET_REQUEST__req__in_t req;
    } mci_reg__RESET_REQUEST__in_t;

    typedef struct packed{
        logic hwclr;
    } mci_reg__RESET_ACK__ack__in_t;

    typedef struct packed{
        mci_reg__RESET_ACK__ack__in_t ack;
    } mci_reg__RESET_ACK__in_t;

    typedef struct packed{
        logic next;
    } mci_reg__CALIPTRA_AXI_ID__id__in_t;

    typedef struct packed{
        mci_reg__CALIPTRA_AXI_ID__id__in_t id;
    } mci_reg__CALIPTRA_AXI_ID__in_t;

    typedef struct packed{
        logic swwe;
    } mci_reg__FW_SRAM_EXEC_REGION_SIZE__size__in_t;

    typedef struct packed{
        mci_reg__FW_SRAM_EXEC_REGION_SIZE__size__in_t size;
    } mci_reg__FW_SRAM_EXEC_REGION_SIZE__in_t;

    typedef struct packed{
        logic [31:0] next;
    } mci_reg__GENERIC_INPUT_WIRES__wires__in_t;

    typedef struct packed{
        mci_reg__GENERIC_INPUT_WIRES__wires__in_t wires;
    } mci_reg__GENERIC_INPUT_WIRES__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__FUSE_WR_DONE__done__in_t;

    typedef struct packed{
        mci_reg__FUSE_WR_DONE__done__in_t done;
    } mci_reg__FUSE_WR_DONE__in_t;

    typedef struct packed{
        logic [31:0] next;
        logic we;
        logic swwel;
    } mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__hash__in_t;

    typedef struct packed{
        mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__hash__in_t hash;
    } mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__STICKY_DATA_VAULT_CTRL__lock_entry__in_t;

    typedef struct packed{
        mci_reg__STICKY_DATA_VAULT_CTRL__lock_entry__in_t lock_entry;
    } mci_reg__STICKY_DATA_VAULT_CTRL__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__STICKY_DATA_VAULT_ENTRY__lock_entry__in_t;

    typedef struct packed{
        mci_reg__STICKY_DATA_VAULT_ENTRY__lock_entry__in_t lock_entry;
    } mci_reg__STICKY_DATA_VAULT_ENTRY__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__DATA_VAULT_CTRL__lock_entry__in_t;

    typedef struct packed{
        mci_reg__DATA_VAULT_CTRL__lock_entry__in_t lock_entry;
    } mci_reg__DATA_VAULT_CTRL__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__DATA_VAULT_ENTRY__lock_entry__in_t;

    typedef struct packed{
        mci_reg__DATA_VAULT_ENTRY__lock_entry__in_t lock_entry;
    } mci_reg__DATA_VAULT_ENTRY__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__lock_entry__in_t;

    typedef struct packed{
        mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__lock_entry__in_t lock_entry;
    } mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__STICKY_LOCKABLE_SCRATCH_REG__data__in_t;

    typedef struct packed{
        mci_reg__STICKY_LOCKABLE_SCRATCH_REG__data__in_t data;
    } mci_reg__STICKY_LOCKABLE_SCRATCH_REG__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__LOCKABLE_SCRATCH_REG_CTRL__lock_entry__in_t;

    typedef struct packed{
        mci_reg__LOCKABLE_SCRATCH_REG_CTRL__lock_entry__in_t lock_entry;
    } mci_reg__LOCKABLE_SCRATCH_REG_CTRL__in_t;

    typedef struct packed{
        logic swwel;
    } mci_reg__LOCKABLE_SCRATCH_REG__data__in_t;

    typedef struct packed{
        mci_reg__LOCKABLE_SCRATCH_REG__data__in_t data;
    } mci_reg__LOCKABLE_SCRATCH_REG__in_t;

    typedef struct packed{
        logic hwset;
    } mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer1_timeout_sts_enable_fa7e6d0f_next_293a6067_resetsignal_3e0ae056__in_t;

    typedef struct packed{
        logic hwset;
    } mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer2_timeout_sts_enable_38137b0c_next_1084f7bd_resetsignal_3e0ae056__in_t;

    typedef struct packed{
        mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer1_timeout_sts_enable_fa7e6d0f_next_293a6067_resetsignal_3e0ae056__in_t error_wdt_timer1_timeout_sts;
        mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer2_timeout_sts_enable_38137b0c_next_1084f7bd_resetsignal_3e0ae056__in_t error_wdt_timer2_timeout_sts;
    } mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__in_t;

    typedef struct packed{
        logic hwset;
    } mci_reg__intr_block_t__notif_intr_t_notif_mcu_sram_ecc_cor_sts_2e5e2a9a__notif_mcu_sram_ecc_cor_sts_enable_d03e9c2f_next_0c3eb3de__in_t;

    typedef struct packed{
        mci_reg__intr_block_t__notif_intr_t_notif_mcu_sram_ecc_cor_sts_2e5e2a9a__notif_mcu_sram_ecc_cor_sts_enable_d03e9c2f_next_0c3eb3de__in_t notif_mcu_sram_ecc_cor_sts;
    } mci_reg__intr_block_t__notif_intr_t_notif_mcu_sram_ecc_cor_sts_2e5e2a9a__in_t;

    typedef struct packed{
        mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__in_t error_internal_intr_r;
        mci_reg__intr_block_t__notif_intr_t_notif_mcu_sram_ecc_cor_sts_2e5e2a9a__in_t notif_internal_intr_r;
    } mci_reg__intr_block_t__in_t;

    typedef struct packed{
        logic mci_rst_b;
        logic mcu_rst_b;
        logic mci_pwrgood;
        logic cptra_req;
        logic mcu_req;
        mci_reg__CAPABILITIES__in_t CAPABILITIES;
        mci_reg__HW_REV_ID__in_t HW_REV_ID;
        mci_reg__HW_CONFIG__in_t HW_CONFIG;
        mci_reg__FLOW_STATUS__in_t FLOW_STATUS;
        mci_reg__RESET_REASON__in_t RESET_REASON;
        mci_reg__HW_ERROR_FATAL__in_t HW_ERROR_FATAL;
        mci_reg__HW_ERROR_NON_FATAL__in_t HW_ERROR_NON_FATAL;
        mci_reg__FW_ERROR_FATAL__in_t FW_ERROR_FATAL;
        mci_reg__FW_ERROR_NON_FATAL__in_t FW_ERROR_NON_FATAL;
        mci_reg__WDT_STATUS__in_t WDT_STATUS;
        mci_reg__MCU_RV_MTIME_L__in_t MCU_RV_MTIME_L;
        mci_reg__MCU_RV_MTIME_H__in_t MCU_RV_MTIME_H;
        mci_reg__RESET_REQUEST__in_t RESET_REQUEST;
        mci_reg__RESET_ACK__in_t RESET_ACK;
        mci_reg__CALIPTRA_AXI_ID__in_t CALIPTRA_AXI_ID;
        mci_reg__FW_SRAM_EXEC_REGION_SIZE__in_t FW_SRAM_EXEC_REGION_SIZE;
        mci_reg__GENERIC_INPUT_WIRES__in_t [2-1:0]GENERIC_INPUT_WIRES;
        mci_reg__FUSE_WR_DONE__in_t FUSE_WR_DONE;
        mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__in_t [8-1:0][12-1:0]PROD_DEBUG_UNLOCK_PK_HASH_REG;
        mci_reg__STICKY_DATA_VAULT_CTRL__in_t [10-1:0]STICKY_DATA_VAULT_CTRL;
        mci_reg__STICKY_DATA_VAULT_ENTRY__in_t [10-1:0][12-1:0]STICKY_DATA_VAULT_ENTRY;
        mci_reg__DATA_VAULT_CTRL__in_t [10-1:0]DATA_VAULT_CTRL;
        mci_reg__DATA_VAULT_ENTRY__in_t [10-1:0][12-1:0]DATA_VAULT_ENTRY;
        mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__in_t [8-1:0]STICKY_LOCKABLE_SCRATCH_REG_CTRL;
        mci_reg__STICKY_LOCKABLE_SCRATCH_REG__in_t [8-1:0]STICKY_LOCKABLE_SCRATCH_REG;
        mci_reg__LOCKABLE_SCRATCH_REG_CTRL__in_t [10-1:0]LOCKABLE_SCRATCH_REG_CTRL;
        mci_reg__LOCKABLE_SCRATCH_REG__in_t [10-1:0]LOCKABLE_SCRATCH_REG;
        mci_reg__intr_block_t__in_t intr_block_rf;
    } mci_reg__in_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__BOOT_STATUS__status__out_t;

    typedef struct packed{
        mci_reg__BOOT_STATUS__status__out_t status;
    } mci_reg__BOOT_STATUS__out_t;

    typedef struct packed{
        logic [23:0] value;
    } mci_reg__FLOW_STATUS__status__out_t;

    typedef struct packed{
        mci_reg__FLOW_STATUS__status__out_t status;
    } mci_reg__FLOW_STATUS__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__RESET_REASON__FW_UPD_RESET__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__RESET_REASON__WARM_RESET__out_t;

    typedef struct packed{
        mci_reg__RESET_REASON__FW_UPD_RESET__out_t FW_UPD_RESET;
        mci_reg__RESET_REASON__WARM_RESET__out_t WARM_RESET;
    } mci_reg__RESET_REASON__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__rw_rw_sticky_hw__out_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_hw__out_t mcu_sram_ecc_unc;
        mci_reg__rw_rw_sticky_hw__out_t nmi_pin;
    } mci_reg__HW_ERROR_FATAL__out_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_hw__out_t RSVD;
    } mci_reg__HW_ERROR_NON_FATAL__out_t;

    typedef struct packed{
        logic [31:0] value;
        logic swmod;
    } mci_reg__rw_rw_sticky_w32__out_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_w32__out_t error_code;
    } mci_reg__FW_ERROR_FATAL__out_t;

    typedef struct packed{
        mci_reg__rw_rw_sticky_w32__out_t error_code;
    } mci_reg__FW_ERROR_NON_FATAL__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__HW_ERROR_ENC__error_code__out_t;

    typedef struct packed{
        mci_reg__HW_ERROR_ENC__error_code__out_t error_code;
    } mci_reg__HW_ERROR_ENC__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__FW_ERROR_ENC__error_code__out_t;

    typedef struct packed{
        mci_reg__FW_ERROR_ENC__error_code__out_t error_code;
    } mci_reg__FW_ERROR_ENC__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__FW_EXTENDED_ERROR_INFO__error_info__out_t;

    typedef struct packed{
        mci_reg__FW_EXTENDED_ERROR_INFO__error_info__out_t error_info;
    } mci_reg__FW_EXTENDED_ERROR_INFO__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__WDT_TIMER1_EN__timer1_en__out_t;

    typedef struct packed{
        mci_reg__WDT_TIMER1_EN__timer1_en__out_t timer1_en;
    } mci_reg__WDT_TIMER1_EN__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__WDT_TIMER1_CTRL__timer1_restart__out_t;

    typedef struct packed{
        mci_reg__WDT_TIMER1_CTRL__timer1_restart__out_t timer1_restart;
    } mci_reg__WDT_TIMER1_CTRL__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__WDT_TIMER1_TIMEOUT_PERIOD__timer1_timeout_period__out_t;

    typedef struct packed{
        mci_reg__WDT_TIMER1_TIMEOUT_PERIOD__timer1_timeout_period__out_t timer1_timeout_period;
    } mci_reg__WDT_TIMER1_TIMEOUT_PERIOD__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__WDT_TIMER2_EN__timer2_en__out_t;

    typedef struct packed{
        mci_reg__WDT_TIMER2_EN__timer2_en__out_t timer2_en;
    } mci_reg__WDT_TIMER2_EN__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__WDT_TIMER2_CTRL__timer2_restart__out_t;

    typedef struct packed{
        mci_reg__WDT_TIMER2_CTRL__timer2_restart__out_t timer2_restart;
    } mci_reg__WDT_TIMER2_CTRL__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__WDT_TIMER2_TIMEOUT_PERIOD__timer2_timeout_period__out_t;

    typedef struct packed{
        mci_reg__WDT_TIMER2_TIMEOUT_PERIOD__timer2_timeout_period__out_t timer2_timeout_period;
    } mci_reg__WDT_TIMER2_TIMEOUT_PERIOD__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__WDT_STATUS__t1_timeout__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__WDT_STATUS__t2_timeout__out_t;

    typedef struct packed{
        mci_reg__WDT_STATUS__t1_timeout__out_t t1_timeout;
        mci_reg__WDT_STATUS__t2_timeout__out_t t2_timeout;
    } mci_reg__WDT_STATUS__out_t;

    typedef struct packed{
        logic [31:0] value;
        logic swmod;
        logic overflow;
    } mci_reg__MCU_RV_MTIME_L__count_l__out_t;

    typedef struct packed{
        mci_reg__MCU_RV_MTIME_L__count_l__out_t count_l;
    } mci_reg__MCU_RV_MTIME_L__out_t;

    typedef struct packed{
        logic [31:0] value;
        logic swmod;
    } mci_reg__MCU_RV_MTIME_H__count_h__out_t;

    typedef struct packed{
        mci_reg__MCU_RV_MTIME_H__count_h__out_t count_h;
    } mci_reg__MCU_RV_MTIME_H__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__MCU_RV_MTIMECMP_L__compare_l__out_t;

    typedef struct packed{
        mci_reg__MCU_RV_MTIMECMP_L__compare_l__out_t compare_l;
    } mci_reg__MCU_RV_MTIMECMP_L__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__MCU_RV_MTIMECMP_H__compare_h__out_t;

    typedef struct packed{
        mci_reg__MCU_RV_MTIMECMP_H__compare_h__out_t compare_h;
    } mci_reg__MCU_RV_MTIMECMP_H__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__RESET_REQUEST__req__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__RESET_REQUEST__clr__out_t;

    typedef struct packed{
        mci_reg__RESET_REQUEST__req__out_t req;
        mci_reg__RESET_REQUEST__clr__out_t clr;
    } mci_reg__RESET_REQUEST__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__RESET_ACK__ack__out_t;

    typedef struct packed{
        mci_reg__RESET_ACK__ack__out_t ack;
    } mci_reg__RESET_ACK__out_t;

    typedef struct packed{
        logic [15:0] value;
    } mci_reg__FW_SRAM_EXEC_REGION_SIZE__size__out_t;

    typedef struct packed{
        mci_reg__FW_SRAM_EXEC_REGION_SIZE__size__out_t size;
    } mci_reg__FW_SRAM_EXEC_REGION_SIZE__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__GENERIC_OUTPUT_WIRES__wires__out_t;

    typedef struct packed{
        mci_reg__GENERIC_OUTPUT_WIRES__wires__out_t wires;
    } mci_reg__GENERIC_OUTPUT_WIRES__out_t;

    typedef struct packed{
        logic value;
        logic swmod;
    } mci_reg__FUSE_WR_DONE__done__out_t;

    typedef struct packed{
        mci_reg__FUSE_WR_DONE__done__out_t done;
    } mci_reg__FUSE_WR_DONE__out_t;

    typedef struct packed{
        logic [31:0] value;
    } mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__hash__out_t;

    typedef struct packed{
        mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__hash__out_t hash;
    } mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__STICKY_DATA_VAULT_CTRL__lock_entry__out_t;

    typedef struct packed{
        mci_reg__STICKY_DATA_VAULT_CTRL__lock_entry__out_t lock_entry;
    } mci_reg__STICKY_DATA_VAULT_CTRL__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__DATA_VAULT_CTRL__lock_entry__out_t;

    typedef struct packed{
        mci_reg__DATA_VAULT_CTRL__lock_entry__out_t lock_entry;
    } mci_reg__DATA_VAULT_CTRL__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__lock_entry__out_t;

    typedef struct packed{
        mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__lock_entry__out_t lock_entry;
    } mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__LOCKABLE_SCRATCH_REG_CTRL__lock_entry__out_t;

    typedef struct packed{
        mci_reg__LOCKABLE_SCRATCH_REG_CTRL__lock_entry__out_t lock_entry;
    } mci_reg__LOCKABLE_SCRATCH_REG_CTRL__out_t;

    typedef struct packed{
        logic intr;
    } mci_reg__intr_block_t__global_intr_t_agg_sts_dd3dcf0a__out_t;

    typedef struct packed{
        logic intr;
    } mci_reg__intr_block_t__global_intr_t_agg_sts_e6399b4a__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer1_timeout_sts_enable_fa7e6d0f_next_293a6067_resetsignal_3e0ae056__out_t;

    typedef struct packed{
        logic value;
    } mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer2_timeout_sts_enable_38137b0c_next_1084f7bd_resetsignal_3e0ae056__out_t;

    typedef struct packed{
        mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer1_timeout_sts_enable_fa7e6d0f_next_293a6067_resetsignal_3e0ae056__out_t error_wdt_timer1_timeout_sts;
        mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__error_wdt_timer2_timeout_sts_enable_38137b0c_next_1084f7bd_resetsignal_3e0ae056__out_t error_wdt_timer2_timeout_sts;
        logic intr;
    } mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__out_t;

    typedef struct packed{
        logic intr;
    } mci_reg__intr_block_t__notif_intr_t_notif_mcu_sram_ecc_cor_sts_2e5e2a9a__out_t;

    typedef struct packed{
        mci_reg__intr_block_t__global_intr_t_agg_sts_dd3dcf0a__out_t error_global_intr_r;
        mci_reg__intr_block_t__global_intr_t_agg_sts_e6399b4a__out_t notif_global_intr_r;
        mci_reg__intr_block_t__error_intr_t_error_wdt_timer1_timeout_sts_3f5fd972_error_wdt_timer2_timeout_sts_e711632a__out_t error_internal_intr_r;
        mci_reg__intr_block_t__notif_intr_t_notif_mcu_sram_ecc_cor_sts_2e5e2a9a__out_t notif_internal_intr_r;
    } mci_reg__intr_block_t__out_t;

    typedef struct packed{
        mci_reg__BOOT_STATUS__out_t BOOT_STATUS;
        mci_reg__FLOW_STATUS__out_t FLOW_STATUS;
        mci_reg__RESET_REASON__out_t RESET_REASON;
        mci_reg__HW_ERROR_FATAL__out_t HW_ERROR_FATAL;
        mci_reg__HW_ERROR_NON_FATAL__out_t HW_ERROR_NON_FATAL;
        mci_reg__FW_ERROR_FATAL__out_t FW_ERROR_FATAL;
        mci_reg__FW_ERROR_NON_FATAL__out_t FW_ERROR_NON_FATAL;
        mci_reg__HW_ERROR_ENC__out_t HW_ERROR_ENC;
        mci_reg__FW_ERROR_ENC__out_t FW_ERROR_ENC;
        mci_reg__FW_EXTENDED_ERROR_INFO__out_t [8-1:0]FW_EXTENDED_ERROR_INFO;
        mci_reg__WDT_TIMER1_EN__out_t WDT_TIMER1_EN;
        mci_reg__WDT_TIMER1_CTRL__out_t WDT_TIMER1_CTRL;
        mci_reg__WDT_TIMER1_TIMEOUT_PERIOD__out_t [2-1:0]WDT_TIMER1_TIMEOUT_PERIOD;
        mci_reg__WDT_TIMER2_EN__out_t WDT_TIMER2_EN;
        mci_reg__WDT_TIMER2_CTRL__out_t WDT_TIMER2_CTRL;
        mci_reg__WDT_TIMER2_TIMEOUT_PERIOD__out_t [2-1:0]WDT_TIMER2_TIMEOUT_PERIOD;
        mci_reg__WDT_STATUS__out_t WDT_STATUS;
        mci_reg__MCU_RV_MTIME_L__out_t MCU_RV_MTIME_L;
        mci_reg__MCU_RV_MTIME_H__out_t MCU_RV_MTIME_H;
        mci_reg__MCU_RV_MTIMECMP_L__out_t MCU_RV_MTIMECMP_L;
        mci_reg__MCU_RV_MTIMECMP_H__out_t MCU_RV_MTIMECMP_H;
        mci_reg__RESET_REQUEST__out_t RESET_REQUEST;
        mci_reg__RESET_ACK__out_t RESET_ACK;
        mci_reg__FW_SRAM_EXEC_REGION_SIZE__out_t FW_SRAM_EXEC_REGION_SIZE;
        mci_reg__GENERIC_OUTPUT_WIRES__out_t [2-1:0]GENERIC_OUTPUT_WIRES;
        mci_reg__FUSE_WR_DONE__out_t FUSE_WR_DONE;
        mci_reg__PROD_DEBUG_UNLOCK_PK_HASH_REG__out_t [8-1:0][12-1:0]PROD_DEBUG_UNLOCK_PK_HASH_REG;
        mci_reg__STICKY_DATA_VAULT_CTRL__out_t [10-1:0]STICKY_DATA_VAULT_CTRL;
        mci_reg__DATA_VAULT_CTRL__out_t [10-1:0]DATA_VAULT_CTRL;
        mci_reg__STICKY_LOCKABLE_SCRATCH_REG_CTRL__out_t [8-1:0]STICKY_LOCKABLE_SCRATCH_REG_CTRL;
        mci_reg__LOCKABLE_SCRATCH_REG_CTRL__out_t [10-1:0]LOCKABLE_SCRATCH_REG_CTRL;
        mci_reg__intr_block_t__out_t intr_block_rf;
    } mci_reg__out_t;

    localparam MCI_REG_ADDR_WIDTH = 32'd13;

endpackage